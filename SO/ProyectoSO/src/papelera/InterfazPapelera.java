/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package papelera;

import explorador.*;
import static explorador.Explorador.Direccion;
import modelo.Directorio;
import modelo.Elemento;
import modelo.Archivo;
import modelo.Usuario;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import navegador.InterfazNavegador;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

/**
 *
 * @author Pc
 */
public class InterfazPapelera extends javax.swing.JFrame implements MouseListener, ActionListener {

    private final static Color COLOR_ENTRADA = new Color(46, 132, 175);
    private final static Color COLOR_SALIDA = new Color(46, 54, 68);
    private static JPanel[] opcionesSideBar = new JPanel[2];
    public static JPanel ultimoClickeado;
    private int numResultados = 0;

    public InterfazPapelera() {
        //Explorador Expl = new Explorador();
        initComponents();
        pintar();
        this.setVisible(true);
        opcionesSideBar[0] = carpetas;
        opcionesSideBar[1] = navegador1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jPanelMenu = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanelContenido = new javax.swing.JPanel();
        carpeta = new javax.swing.JLabel();
        Elementos = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        navegador1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        carpetas = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        papelera = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        rSLabelHora1 = new rojeru_san.RSLabelHora();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabelResultados = new javax.swing.JLabel();

        jMenuItem3.setText("Eliminar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem3);

        jMenuItem7.setText("Restaurar");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem7);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Papelera de reciclaje");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8_Delete_25px.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelMenuLayout = new javax.swing.GroupLayout(jPanelMenu);
        jPanelMenu.setLayout(jPanelMenuLayout);
        jPanelMenuLayout.setHorizontalGroup(
            jPanelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMenuLayout.createSequentialGroup()
                .addContainerGap(293, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelMenuLayout.setVerticalGroup(
            jPanelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMenuLayout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addComponent(jButton3))
        );

        jScrollPane2.setMaximumSize(new java.awt.Dimension(854, 400));

        jPanelContenido.setBackground(new java.awt.Color(255, 255, 255));
        jPanelContenido.setComponentPopupMenu(jPopupMenu1);
        jPanelContenido.setLayout(new java.awt.GridLayout(0, 8));
        jScrollPane2.setViewportView(jPanelContenido);

        carpeta.setText(" ");
        carpeta.setMaximumSize(new java.awt.Dimension(45, 45));
        carpeta.setMinimumSize(new java.awt.Dimension(45, 45));
        carpeta.setPreferredSize(new java.awt.Dimension(45, 45));

        Elementos.setText(" ");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(0, 68));

        navegador1.setBackground(new java.awt.Color(45, 52, 66));
        navegador1.setMinimumSize(new java.awt.Dimension(70, 70));
        navegador1.setPreferredSize(new java.awt.Dimension(70, 70));
        navegador1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                navegador1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                navegador1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                navegador1MousePressed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cromo.png"))); // NOI18N

        javax.swing.GroupLayout navegador1Layout = new javax.swing.GroupLayout(navegador1);
        navegador1.setLayout(navegador1Layout);
        navegador1Layout.setHorizontalGroup(
            navegador1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navegador1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                .addContainerGap())
        );
        navegador1Layout.setVerticalGroup(
            navegador1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
        );

        carpetas.setBackground(new java.awt.Color(46, 52, 66));
        carpetas.setMinimumSize(new java.awt.Dimension(65, 65));
        carpetas.setPreferredSize(new java.awt.Dimension(70, 70));
        carpetas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                carpetasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                carpetasMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                carpetasMousePressed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(45, 52, 66));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/carpeta.png"))); // NOI18N

        javax.swing.GroupLayout carpetasLayout = new javax.swing.GroupLayout(carpetas);
        carpetas.setLayout(carpetasLayout);
        carpetasLayout.setHorizontalGroup(
            carpetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(carpetasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        carpetasLayout.setVerticalGroup(
            carpetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, carpetasLayout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        papelera.setBackground(new java.awt.Color(46, 132, 175));
        papelera.setMinimumSize(new java.awt.Dimension(70, 70));
        papelera.setPreferredSize(new java.awt.Dimension(70, 70));
        papelera.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                papeleraMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                papeleraMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                papeleraMousePressed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/basura.png"))); // NOI18N

        javax.swing.GroupLayout papeleraLayout = new javax.swing.GroupLayout(papelera);
        papelera.setLayout(papeleraLayout);
        papeleraLayout.setHorizontalGroup(
            papeleraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(papeleraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        papeleraLayout.setVerticalGroup(
            papeleraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
        );

        rSLabelHora1.setForeground(new java.awt.Color(45, 52, 66));
        rSLabelHora1.setFont(new java.awt.Font("Roboto Bold", 1, 36)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(314, 314, 314)
                .addComponent(carpetas, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addComponent(navegador1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83)
                .addComponent(papelera, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rSLabelHora1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(navegador1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(papelera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(carpetas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rSLabelHora1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel4.setFont(new java.awt.Font("Arial Black", 0, 36)); // NOI18N
        jLabel4.setText("PAPELERA DE RECICLAJE");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Cantidad de elementos: ");

        jLabelResultados.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
            .addComponent(jSeparator1)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1169, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelResultados, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(carpeta, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(Elementos, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(carpeta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Elementos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel5)
                    .addComponent(jLabelResultados, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.jMenuItem3ActionPerformed(evt);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void carpetasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carpetasMouseEntered
        setColor(0);
    }//GEN-LAST:event_carpetasMouseEntered

    private void carpetasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carpetasMouseExited
        exitColor(0);
    }//GEN-LAST:event_carpetasMouseExited

    private void navegador1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_navegador1MouseEntered
        setColor(01);
    }//GEN-LAST:event_navegador1MouseEntered

    private void navegador1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_navegador1MouseExited
        exitColor(1);
    }//GEN-LAST:event_navegador1MouseExited

    private void papeleraMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_papeleraMouseEntered

    }//GEN-LAST:event_papeleraMouseEntered

    private void papeleraMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_papeleraMouseExited

    }//GEN-LAST:event_papeleraMouseExited

    private void navegador1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_navegador1MousePressed
        this.dispose();
        new InterfazNavegador();
    }//GEN-LAST:event_navegador1MousePressed

    private void papeleraMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_papeleraMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_papeleraMousePressed
    //Boton Elimnar
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        try {
            JLabel nombreElemento = (JLabel) ultimoClickeado.getComponent(2);
            JLabel tipoElemento = (JLabel) ultimoClickeado.getComponent(1);
            if (tipoElemento.getText().equals("archivo")) {
                Element removido = Archivo.obtenerNodoHijo(nombreElemento.getText());
                if (removido.getAttribute("escritura").equals("Público") || removido.getAttribute("dueño").equals(Explorador.currentUser.getAttribute("nombre"))) {
                    Archivo a = new Archivo(Integer.parseInt(removido.getAttribute("id")), removido.getAttribute("nombre"), removido.getNodeName(), "Lorem", true, true, "adm", removido.getAttribute("texto"));
                    a.eliminar();

                    Explorador.estadoPegar = false;
                    ultimoClickeado = null;
                    this.dispose();
                    new InterfazPapelera();
                } else {
                    JOptionPane.showMessageDialog(null, "No tienes permisos para eliminar este elemento", "Acceso denegado", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                Element removido = Directorio.obtenerNodoHijo(nombreElemento.getText());
                if (removido.getAttribute("escritura").equals("Público") || removido.getAttribute("dueño").equals(Explorador.currentUser.getAttribute("nombre"))) {
                    Directorio d = new Directorio(Integer.parseInt(removido.getAttribute("id")), removido.getAttribute("nombre"), removido.getNodeName(), true, true, "admn");
                    d.eliminar();
                    //pegar.setEnabled(false);
                    Explorador.estadoPegar = false;
                    ultimoClickeado = null;
                    this.dispose();
                    new InterfazPapelera();
                } else {
                    JOptionPane.showMessageDialog(null, "No tienes permisos para eliminar este elemento", "Acceso denegado", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Seleccion un elemento", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed
    
    //Boton Restaurar
    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        
            JLabel nombreElemento = (JLabel) ultimoClickeado.getComponent(2);
            JLabel tipoElemento = (JLabel) ultimoClickeado.getComponent(1);
            if (tipoElemento.getText().equals("archivo")) {
                Element removido = Archivo.obtenerNodoHijo(nombreElemento.getText());
                if (removido.getAttribute("escritura").equals("Público") || removido.getAttribute("dueño").equals(Explorador.currentUser.getAttribute("nombre"))) {
                    Archivo a = new Archivo(Integer.parseInt(removido.getAttribute("id")), removido.getAttribute("nombre"), removido.getNodeName(), "Lorem", true, true, removido.getAttribute("dueño"), removido.getAttribute("texto"));
                    System.out.println(Integer.parseInt(removido.getAttribute("id")));
                    a.setEliminado("NO");
                    a.editar(ultimoClickeado);
                    //pegar.setEnabled(false);
                    Explorador.estadoPegar = false;
                    ultimoClickeado = null;
                    this.dispose();
                    new InterfazPapelera();
                } else {
                    JOptionPane.showMessageDialog(null, "No tienes permisos para eliminar este elemento", "Acceso denegado", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                Element removido = Directorio.obtenerNodoHijo(nombreElemento.getText());
                if (removido.getAttribute("escritura").equals("Público") || removido.getAttribute("dueño").equals(Explorador.currentUser.getAttribute("nombre"))) {
                    Directorio d = new Directorio(Integer.parseInt(removido.getAttribute("id")), removido.getAttribute("nombre"), removido.getNodeName(), true, true, removido.getAttribute("dueño"));
                    d.setEliminado("NO");
                    d.editar(ultimoClickeado);
                    //pegar.setEnabled(false);
                    Explorador.estadoPegar = false;
                    ultimoClickeado = null;
                    this.dispose();
                    new InterfazPapelera();
                } else {
                    JOptionPane.showMessageDialog(null, "No tienes permisos para eliminar este elemento", "Acceso denegado", JOptionPane.ERROR_MESSAGE);
                }
            }
        
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void carpetasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carpetasMousePressed
        this.dispose();
        new InterfazExplorador();
    }//GEN-LAST:event_carpetasMousePressed

    public void aumentarDireccion() {
        Explorador.Direccion = (Explorador.Direccion + "\\" + Explorador.currentDir.getAttributes().getNamedItem("nombre").getTextContent());
        System.out.println(Explorador.Direccion);
    }

    public void reducirDireccion() {
        int finalOccurrence = Explorador.Direccion.lastIndexOf("\\");
        Explorador.Direccion = (Explorador.Direccion.substring(0, finalOccurrence));
        System.out.println(Explorador.Direccion);
    }

    public void pintar() {
        System.out.println("Empieza a pintar");
        Node raiz = Explorador.arbol.getDocumentElement();
        pintar_recursivo(raiz, "Mi PC:");
    }

    public void pintar_recursivo(Node raiz, String direccion) {
        NodeList listaNodos = raiz.getChildNodes();
        for (int i = 0; i < listaNodos.getLength(); i++) {
            if (listaNodos.item(i).getNodeName().equals("directorio") && listaNodos.item(i).getAttributes().getNamedItem("Eliminado").getTextContent().equals("SI")) {

                Panel panel = new Panel(listaNodos.item(i).getNodeName(), listaNodos.item(i).getAttributes().getNamedItem("nombre").getTextContent());
                JPanel elemento = panel.crear(direccion);
                elemento.addMouseListener(this);
                elemento.setComponentPopupMenu(jPopupMenu1);
                jPanelContenido.add(elemento);
                numResultados++;
                jLabelResultados.setText(numResultados + " resultados");
                pintar_recursivo(listaNodos.item(i), direccion + "\\" + listaNodos.item(i).getAttributes().getNamedItem("nombre").getTextContent());
            } else if (listaNodos.item(i).getAttributes().getNamedItem("Eliminado").getTextContent().equals("SI")){

                Panel panel = new Panel(listaNodos.item(i).getNodeName(), listaNodos.item(i).getAttributes().getNamedItem("nombre").getTextContent());
                JPanel elemento = panel.crear(direccion);
                elemento.addMouseListener(this);
                elemento.setComponentPopupMenu(jPopupMenu1);
                jPanelContenido.add(elemento);
                numResultados++;
                jLabelResultados.setText(numResultados + " resultados");

            }
        }

    }

    @Override
    public void actionPerformed(ActionEvent e) {

    }

    @Override
    public void mouseClicked(MouseEvent me) {
        System.out.println("v:");
        if (ultimoClickeado != null) {
            ultimoClickeado.setBackground(Color.WHITE);
        }
        me.getComponent().setBackground(new Color(187, 211, 249));
        ultimoClickeado = (JPanel) me.getComponent();
        JLabel tipoComponente = (JLabel) ultimoClickeado.getComponent(1);

    }

    @Override
    public void mousePressed(MouseEvent e) {

    }

    @Override
    public void mouseReleased(MouseEvent e) {

    }

    @Override
    public void mouseEntered(MouseEvent e) {

    }

    @Override
    public void mouseExited(MouseEvent e) {

    }

    class Panel {

        private final String tipo, nombre;

        public Panel(String tipo, String nombre) {
            this.tipo = tipo;
            this.nombre = nombre;
        }

        public JPanel crear(String direccion) {
            JPanel panel = new JPanel();
            panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
            JLabel nombre = new JLabel(this.nombre);
            nombre.setAlignmentX(Component.CENTER_ALIGNMENT);
            JLabel tipo = new JLabel(this.tipo);
            tipo.setAlignmentX(Component.CENTER_ALIGNMENT);
            JLabel ubicacion = new JLabel(direccion);
            ubicacion.setAlignmentX(Component.CENTER_ALIGNMENT);
            JLabel imagen = new JLabel("");
            imagen.setAlignmentX(Component.CENTER_ALIGNMENT);
            imagen.setSize(60, 60);
            if (this.tipo.equals("directorio")) {
                ImageIcon img_directorio = new ImageIcon(getClass().getResource("/Imagenes/folder.png"));
                ImageIcon img = new ImageIcon(img_directorio.getImage().getScaledInstance(imagen.getWidth(), imagen.getHeight(), Image.SCALE_DEFAULT));
                imagen.setIcon(img);
            }
            if (this.tipo.equals("archivo")) {
                ImageIcon img_archivo = new ImageIcon(getClass().getResource("/Imagenes/document.png"));
                ImageIcon img = new ImageIcon(img_archivo.getImage().getScaledInstance(imagen.getWidth(), imagen.getHeight(), Image.SCALE_DEFAULT));
                imagen.setIcon(img);
            }
            panel.add(imagen);
            panel.add(tipo);
            panel.add(nombre);
            panel.add(ubicacion);
            panel.setBackground(Color.WHITE);
            return panel;
        }
    }

    public static void setColor(int opcion) {
        opcionesSideBar[opcion].setBackground(COLOR_ENTRADA);
    }

    public static void exitColor(int opcion) {
        opcionesSideBar[opcion].setBackground(COLOR_SALIDA);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Elementos;
    private javax.swing.JLabel carpeta;
    private javax.swing.JPanel carpetas;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelResultados;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelContenido;
    private javax.swing.JPanel jPanelMenu;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel navegador1;
    private javax.swing.JPanel papelera;
    private rojeru_san.RSLabelHora rSLabelHora1;
    // End of variables declaration//GEN-END:variables
}
